#include <iostream>
using namespace std;
struct node
{
    int data;
    node *next;
};
class linked_list
{
private:
    node *head,*tail;
public:
    linked_list()
    {
        head = NULL;
        tail = NULL;
    }
    void add_node_at_end(int n)
    {
    	node *temp=new node;
    	temp->data=n;
    	temp->next=NULL;
    	if(head==NULL)
    	{
    		head=temp;
    		tail=temp;
		}
		else
		{
			tail->next=temp;
			tail=tail->next;
		}
    	
	}
	void add_node_at_start(int n)
	{
		node *temp=new node;
		temp->data=n;
		temp->next=head;
		head=temp;
	}
	void insert_at_position(int pos,int val)
	{
		node *pre=new node;
		node *cur=new node;
		node *temp=new node;
		cur=head;
		for(int i=1;i<pos;i++)
		{
			pre=cur;
			cur=cur->next;
		}
		temp->data=val;
		temp->next=cur;
		pre->next=temp;
	}
	void display()
	{
		node *temp=new node;
		temp=head;
		while(temp!=NULL)
		{
			cout<<temp->data<<"\t";
			temp=temp->next;
		}
	}
	void delete_start()
	{
		node *temp=new node;
		temp=head;
		head=head->next;
		delete temp;
		
	}
	void delete_last()
	{
		node *pre=new node;
		node *cur=new node;
		cur=head;
		while(cur->next!=NULL)
		{
			pre=cur;
			cur=cur->next;
		}
		tail=pre;
		pre->next=NULL;
		delete cur;
	}
	void delete_position(int pos)
  {
    node *current=new node;
    node *previous=new node;
    current=head;
    for(int i=1;i<pos;i++)
    {
      previous=current;
      current=current->next;
    }
    previous->next=current->next;
  }
  int count()
  {
  	node *temp=new node;
  	int len=0;
  	temp=head;
  	while(temp!=NULL)
  	{
  		len++;
  		temp=temp->next;
  		
	  }
	  return len;
  }
  bool find(int x)
  {
  	node *temp=new node;
  	temp=head;
  	while(temp!=NULL)
  	{
  		if(temp->data==x)
  		{
  			return true;
		  }
		temp=temp->next;  
	  }
	return false;  
  }
 };

int main()
{

    linked_list a;
    a.add_node_at_end(3);
    a.add_node_at_end(5);
    a.add_node_at_start(4);
    a.insert_at_position(2,6);
    a.display();
    cout<<"\n";
    a.delete_start();
    a.display();
    cout<<"\n";
    a.delete_last();
    a.display();
    cout<<"\n";
    int x=a.count();
    cout<<x<<endl;
    a.find(6)? cout<<"Yes" :cout<<"No";
    return 0;
}
